#pragma checksum "C:\DEVELOPMENT\Git\_Api\_Api\Views\Shared\_AddNew.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a31ccbb47329825246f916cab78df931b9b8a65c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__AddNew), @"mvc.1.0.view", @"/Views/Shared/_AddNew.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a31ccbb47329825246f916cab78df931b9b8a65c", @"/Views/Shared/_AddNew.cshtml")]
    public class Views_Shared__AddNew : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\DEVELOPMENT\Git\_Api\_Api\Views\Shared\_AddNew.cshtml"
Write(RenderBody());

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<html lang=\"pt-br\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a31ccbb47329825246f916cab78df931b9b8a65c2863", async() => {
                WriteLiteral(@"
        <meta charset=""utf-8"">
        <link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css"" 
        integrity=""sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK"" 
        crossorigin=""anonymous"">

        <title>Hello, world!</title>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a31ccbb47329825246f916cab78df931b9b8a65c4162", async() => {
                WriteLiteral(@"
        <h1>Hello, world!</h1>
        <script src=""https://code.jquery.com/jquery-3.4.1.slim.min.js"" 
        integrity=""sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"" 
        crossorigin=""anonymous""></script>

        <script src=""https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"" 
        integrity=""sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"" 
        crossorigin=""anonymous""></script>

        <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"" 
        integrity=""sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"" 
        crossorigin=""anonymous""></script>

        <form>
  <fieldset>
    <legend>Legend</legend>
    <div class=""form-group row"">
      <label for=""staticEmail"" class=""col-sm-2 col-form-label"">Email</label>
      <div class=""col-sm-10"">
        <input type=""text""");
                BeginWriteAttribute("readonly", " readonly=\"", 1327, "\"", 1338, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""form-control-plaintext"" id=""staticEmail"" value=""email@example.com"">
      </div>
    </div>
    <div class=""form-group"">
      <label for=""exampleInputEmail1"">Email address</label>
      <input type=""email"" class=""form-control"" id=""exampleInputEmail1"" aria-describedby=""emailHelp"" placeholder=""Enter email"">
      <small id=""emailHelp"" class=""form-text text-muted"">We'll never share your email with anyone else.</small>
    </div>
    <div class=""form-group"">
      <label for=""exampleInputPassword1"">Password</label>
      <input type=""password"" class=""form-control"" id=""exampleInputPassword1"" placeholder=""Password"">
    </div>
    <div class=""form-group"">
      <label for=""exampleSelect1"">Example select</label>
      <select class=""form-control"" id=""exampleSelect1"">
        <option>1</option>
        <option>2</option>
        <option>3</option>
        <option>4</option>
        <option>5</option>
      </select>
    </div>
    <div class=""form-group"">
      <label for=""exampleSelec");
                WriteLiteral("t2\">Example multiple select</label>\r\n      <select");
                BeginWriteAttribute("multiple", " multiple=\"", 2413, "\"", 2424, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""form-control"" id=""exampleSelect2"">
        <option>1</option>
        <option>2</option>
        <option>3</option>
        <option>4</option>
        <option>5</option>
      </select>
    </div>
    <div class=""form-group"">
      <label for=""exampleTextarea"">Example textarea</label>
      <textarea class=""form-control"" id=""exampleTextarea"" rows=""3""></textarea>
    </div>
    <div class=""form-group"">
      <label for=""exampleInputFile"">File input</label>
      <input type=""file"" class=""form-control-file"" id=""exampleInputFile"" aria-describedby=""fileHelp"">
      <small id=""fileHelp"" class=""form-text text-muted"">This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.</small>
    </div>
    <fieldset class=""form-group"">
      <legend>Radio buttons</legend>
      <div class=""form-check"">
        <label class=""form-check-label"">
          <input type=""radio"" class=""form-check-input"" name=""optionsRadios"" id=""optionsRadios1"" ");
                WriteLiteral("value=\"option1\"");
                BeginWriteAttribute("checked", " checked=\"", 3464, "\"", 3474, 0);
                EndWriteAttribute();
                WriteLiteral(@">
          Option one is this and that—be sure to include why it's great
        </label>
      </div>
      <div class=""form-check"">
        <label class=""form-check-label"">
          <input type=""radio"" class=""form-check-input"" name=""optionsRadios"" id=""optionsRadios2"" value=""option2"">
          Option two can be something else and selecting it will deselect option one
        </label>
      </div>
      <div class=""form-check disabled"">
        <label class=""form-check-label"">
          <input type=""radio"" class=""form-check-input"" name=""optionsRadios"" id=""optionsRadios3"" value=""option3""");
                BeginWriteAttribute("disabled", " disabled=\"", 4083, "\"", 4094, 0);
                EndWriteAttribute();
                WriteLiteral(@">
          Option three is disabled
        </label>
      </div>
    </fieldset>
    <fieldset class=""form-group"">
      <legend>Checkboxes</legend>
      <div class=""form-check"">
        <label class=""form-check-label"">
          <input class=""form-check-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 4384, "\"", 4392, 0);
                EndWriteAttribute();
                BeginWriteAttribute("checked", " checked=\"", 4393, "\"", 4403, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n          Option one is this and that—be sure to include why it\'s great\r\n        </label>\r\n      </div>\r\n      <div class=\"form-check disabled\">\r\n        <label class=\"form-check-label\">\r\n          <input class=\"form-check-input\" type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 4652, "\"", 4660, 0);
                EndWriteAttribute();
                BeginWriteAttribute("disabled", " disabled=\"", 4661, "\"", 4672, 0);
                EndWriteAttribute();
                WriteLiteral(@">
          Option two is disabled
        </label>
      </div>
    </fieldset>
    <fieldset class=""form-group"">
      <legend>Sliders</legend>
      <label for=""customRange1"">Example range</label>
      <input type=""range"" class=""custom-range"" id=""customRange1"">
    </fieldset>
    <button type=""submit"" class=""btn btn-primary"">Submit</button>
  </fieldset>
</form>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
